{"version":3,"sources":["components/AddPlayerWindow.jsx","components/NavBar.jsx","components/QueueUtils.js","components/QueueItemCard.jsx","components/QueueWindow.jsx","components/RulesetWindow.jsx","components/TeamWindow.jsx","components/QueueView.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddPlayerWindow","state","name","position","group","handleSubmit","e","preventDefault","props","onAddPlayer","onAddPlayerToGroup","setState","handleNameChange","target","value","handlePositionChange","handleGroupChange","className","onSubmit","this","type","id","onChange","required","React","Component","NavBar","Player","Group","size","players","QueueItem","item","QueueItemCard","qItem","actionButton","console","log","map","p","QueueWindow","queue","getNextButtons","onSplitGroup","onRemovePlayer","length","i","onClick","RulesetWindow","ruleset","onChangeRuleset","class","TeamWindow","num","team","onRefillTeam","onRemoveFromTeam","QueueView","teams","nextPlayerID","nextItemID","requeueTeam","winner","forEach","push","draftTeam","sizeOfItems","curr","splice","playTwoNext","twoOffNext","kingsCourtNext","handleAddPlayer","newPlayerID","newItemID","player","handleAddPlayerToGroup","handleRemoveFromTeam","indexOf","handleRemovePlayer","handleSplitGroup","handleRefillTeam","handleChangeruleset","items","reduce","sum","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72e5f314.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AddPlayerWindow extends React.Component {\n  state = {\n    name: \"\",\n    position: \"Outside Hitter\",\n    group: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, position, group } = this.state;\n    const { onAddPlayer, onAddPlayerToGroup } = this.props;\n\n    group === \"\"\n      ? onAddPlayer(name, position)\n      : onAddPlayerToGroup(name, position, group);\n\n    this.setState({ name: \"\", position: \"Outside Hitter\", group: \"\" });\n  };\n\n  handleNameChange = (e) => {\n    this.setState({ name: e.target.value });\n  };\n  handlePositionChange = (e) => {\n    this.setState({ position: e.target.value });\n  };\n  handleGroupChange = (e) => {\n    this.setState({ group: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"col-12 col-md-6\">\n        <div className=\"border bg-light p-2 mb-2\">\n          <form onSubmit={this.handleSubmit}>\n            <h3>Add Player</h3>\n            <div className=\"mb-2\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">Player Name</span>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  className=\"form-control\"\n                  value={this.state.name}\n                  onChange={this.handleNameChange}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"mb-2\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">Position</span>\n                <select\n                  className=\"form-select\"\n                  name=\"position\"\n                  id=\"postion\"\n                  value={this.state.position}\n                  onChange={this.handlePositionChange}\n                >\n                  <option value=\"Outside Hitter\">Outside Hitter</option>\n                  <option value=\"Opposite\">Opposite</option>\n                  <option value=\"Middle Blocker\">Middle Blocker</option>\n                  <option value=\"Setter\">Setter</option>\n                  <option value=\"Libero\">Libero</option>\n                  <option value=\"Defensive Specialist\">\n                    Defensive Specialist\n                  </option>\n                </select>\n              </div>\n            </div>\n            <div className=\"mb-2\">\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">Group Name (Opt.)</span>\n                <input\n                  type=\"text\"\n                  id=\"group\"\n                  name=\"group\"\n                  className=\"form-control\"\n                  value={this.state.group}\n                  onChange={this.handleGroupChange}\n                />\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddPlayerWindow;\n","import React from \"react\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-light bg-light border mb-2\">\n      <div className=\"container\">\n        <h2 className=\"navbar-brand\">Open Gym Queue</h2>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","class Player {\n  constructor(id, name, position) {\n    this.id = id;\n    this.name = name;\n    this.position = position;\n  }\n}\n\nclass Group {\n  constructor(size, name, players) {\n    this.size = size;\n    this.name = name;\n    this.players = players;\n  }\n}\n\nclass QueueItem {\n  constructor(id, type, size, item) {\n    this.id = id;\n    this.type = type;\n    this.size = size;\n    this.item = item;\n  }\n}\nexport { Player, Group, QueueItem };\n","import React from \"react\";\n\nconst QueueItemCard = ({ qItem, actionButton }) => {\n  const { type, item } = qItem;\n\n  const players = type === \"group\" ? item.players : [item];\n  console.log(\"creating card for :\", qItem, item);\n\n  return (\n    <div className=\"card p-2 mb-2 g-x1\">\n      <div className=\"container pe-3\">\n        {type === \"group\" && <h5>{item.name}</h5>}\n        <div className=\"row  align-items-center\">\n          <div className=\"col-10\">\n            {console.log(\"adding players to card: \", players)}\n            {players.map((p) => (\n              <p key={p.id} className=\"h5\">\n                <span className=\"badge bg-secondary me-1\">{p.name}</span>\n                <span className=\"badge bg-dark\">{p.position}</span>\n              </p>\n            ))}\n          </div>\n          {actionButton}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QueueItemCard;\n","import React from \"react\";\nimport { ArrowsExpand, XCircle } from \"react-bootstrap-icons\";\nimport QueueItemCard from \"./QueueItemCard.jsx\";\n\nconst QueueWindow = ({\n  queue,\n  getNextButtons,\n  onSplitGroup,\n  onRemovePlayer,\n}) => {\n  console.log(\"rendering queue\", queue);\n  return (\n    <div className=\"col-12mb-2\">\n      <div className=\"border bg-light p-2\">\n        <h3 className=\"mb-2\">Players</h3>\n        {queue.length === 0 ? (\n          <p className=\"mb-2\">No players in the queue</p>\n        ) : (\n          getNextButtons()\n        )}\n        {queue.map((i) => {\n          console.log(\"mapping to card: \", i);\n          return (\n            <QueueItemCard\n              key={i.type + i.id}\n              qItem={i}\n              actionButton={\n                i.type === \"player\" ? (\n                  <button\n                    className=\"btn bg-danger col\"\n                    onClick={() => onRemovePlayer(i)}\n                  >\n                    <XCircle />\n                  </button>\n                ) : (\n                  <button\n                    className=\"btn bg-danger col\"\n                    onClick={() => onSplitGroup(i)}\n                  >\n                    <ArrowsExpand />\n                  </button>\n                )\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default QueueWindow;\n","import React from \"react\";\n\nconst RulesetWindow = ({ ruleset, onChangeRuleset }) => {\n  return (\n    <div className=\"col-12 col-md-6\">\n      <div className=\" mb-2  \">\n        <div className=\"border bg-light p-2\">\n          <div className=\"text-center mb-2\">\n            <div className=\"btn-group\">\n              <button\n                className={\n                  \"btn btn-primary\" + (ruleset === \"playtwo\" ? \" active\" : \"\")\n                }\n                onClick={() => onChangeRuleset(\"playtwo\")}\n              >\n                Play Two\n              </button>\n              <button\n                className={\n                  \"btn btn-primary\" + (ruleset === \"twooff\" ? \" active\" : \"\")\n                }\n                onClick={() => onChangeRuleset(\"twooff\")}\n              >\n                Two Off\n              </button>\n              <button\n                className={\n                  \"btn btn-primary\" + (ruleset === \"kings\" ? \" active\" : \"\")\n                }\n                onClick={() => onChangeRuleset(\"kings\")}\n              >\n                King Of The Court\n              </button>\n            </div>\n          </div>\n          <ol class=\"list-group list-group-numbered\">\n            <li class=\"list-group-item d-flex justify-content-between align-items-start\">\n              <div class=\"ms-2 me-auto\">\n                <div class=\"fw-bold\">Play Two</div>\n                Play two games in a row, regardless of winner. Team 1 rotates\n                off, Team 2 becomes Team 1, and whoever is next in line becomes\n                the new Team 2. A balanced way to ensure equal playing time\n                while also playing multiple different opponents.\n              </div>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-start\">\n              <div class=\"ms-2 me-auto\">\n                <div class=\"fw-bold\">Two Off</div>\n                Play only one game, and then both teams rotate off and two new\n                teams join. This ruleset has less continuous playing time than\n                Play Two but also less waiting time as the queue rotates faster.\n              </div>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-start\">\n              <div class=\"ms-2 me-auto\">\n                <div class=\"fw-bold\">King of the Court</div>\n                As the name implies, the king runs the court. Whichever team\n                wins says on to play the next game while the losing team rotates\n                off.\n              </div>\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RulesetWindow;\n","import React from \"react\";\nimport { ArrowRightCircle } from \"react-bootstrap-icons\";\nimport QueueItemCard from \"./QueueItemCard\";\n\nconst TeamWindow = ({ num, team, size, onRefillTeam, onRemoveFromTeam }) => {\n  return (\n    <div className=\"col-12 col-xl-6\">\n      <div className=\"mb-2\">\n        <div className=\"border bg-light p-2 w-100 h-100 d-inline-block\">\n          <h3>Team #{num}</h3>\n          {team.map((i) => (\n            <QueueItemCard\n              key={i.type + i.id}\n              qItem={i}\n              actionButton={\n                <button\n                  className=\"btn bg-danger col\"\n                  onClick={onRemoveFromTeam}\n                >\n                  <ArrowRightCircle />\n                </button>\n              }\n            />\n          ))}\n          {size > 0 && size < 6 && (\n            <div className=\"container mb-2 text-center\">\n              <button\n                className=\"btn btn-primary col-5 mx-2\"\n                onClick={onRefillTeam}\n              >\n                Fill Team\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamWindow;\n","import React, { Component } from \"react\";\nimport AddPlayerWindow from \"./AddPlayerWindow.jsx\";\nimport NavBar from \"./NavBar.jsx\";\nimport { Player, Group, QueueItem } from \"./QueueUtils.js\";\nimport QueueWindow from \"./QueueWindow.jsx\";\nimport RulesetWindow from \"./RulesetWindow.jsx\";\nimport TeamWindow from \"./TeamWindow.jsx\";\n\nclass QueueView extends Component {\n  state = {\n    ruleset: \"playtwo\",\n    teams: [[], []],\n    queue: [],\n    size: 0,\n    nextPlayerID: 0,\n    nextItemID: 0,\n  };\n\n  // ruleset functions\n  requeueTeam = (teams, queue, winner) => {\n    teams[winner].forEach((i) => queue.push(i));\n    teams = [teams[(winner + 1) % 2], []];\n    return { teams, queue };\n  };\n\n  draftTeam = (team, queue) => {\n    let size = this.sizeOfItems(team);\n    let curr = 0;\n    while (size < 6 && curr < queue.length) {\n      const i = queue[curr];\n      if (i.size + size <= 6) {\n        team.push(i);\n        size += i.size;\n        queue.splice(curr, 1);\n      } else {\n        curr++;\n      }\n    }\n    return { team, queue };\n  };\n\n  playTwoNext = () => {\n    let teams = [...this.state.teams];\n    let queue = [...this.state.queue];\n    ({ teams, queue } = this.requeueTeam(teams, queue, 0));\n\n    let team;\n    ({ team, queue } = this.draftTeam([], queue));\n    teams[1] = team;\n\n    this.setState({ teams, queue, size: this.sizeOfItems(queue) });\n  };\n\n  twoOffNext = () => {\n    let teams = [...this.state.teams];\n    let queue = [...this.state.queue];\n    ({ teams, queue } = this.requeueTeam(teams, queue, 0));\n    ({ teams, queue } = this.requeueTeam(teams, queue, 0));\n\n    let team;\n    ({ team, queue } = this.draftTeam([], queue));\n    teams[0] = team;\n\n    ({ team, queue } = this.draftTeam([], queue));\n    teams[1] = team;\n\n    this.setState({ teams, queue, size: this.sizeOfItems(queue) });\n  };\n\n  kingsCourtNext = (winner) => {\n    let teams = [...this.state.teams];\n    let queue = [...this.state.queue];\n    ({ teams, queue } = this.requeueTeam(teams, queue, winner));\n\n    let team;\n    ({ team, queue } = this.draftTeam([], queue));\n    teams[(winner + 1) % 2] = team;\n\n    this.setState({ teams, queue, size: this.sizeOfItems(queue) });\n  };\n\n  // player event handlers\n  handleAddPlayer = (name, position) => {\n    const newPlayerID = this.state.nextPlayerID;\n    const newItemID = this.state.nextItemID;\n    const player = new Player(newPlayerID, name, position);\n    const queue = [...this.state.queue];\n\n    queue.push(new QueueItem(newItemID, \"player\", 1, player));\n\n    this.setState({\n      queue,\n      nextPlayerID: newPlayerID + 1,\n      nextItemID: newItemID + 1,\n      size: this.state.size + 1,\n    });\n  };\n\n  handleAddPlayerToGroup = (name, position, group) => {\n    const newPlayerID = this.state.nextPlayerID;\n    const newItemID = this.state.nextItemID;\n    const player = new Player(newPlayerID, name, position);\n    const queue = [...this.state.queue];\n\n    // TODO : fix this ugly code you dolt\n\n    let target = new Group(1, group, [player]);\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].type === \"group\" && queue[i].item.name === group) {\n        target = queue[i].item;\n        target.size++;\n        target.players.push(player);\n        queue.splice(\n          i,\n          1,\n          new QueueItem(newItemID, \"group\", target.size, target)\n        );\n        break;\n      }\n    }\n\n    if (target.size === 1) {\n      queue.push(new QueueItem(newItemID, \"group\", target.size, target));\n    }\n\n    this.setState({\n      queue,\n      nextPlayerID: newPlayerID + 1,\n      nextItemID: newItemID + 1,\n      size: this.state.size + 1,\n    });\n  };\n\n  handleRemoveFromTeam = (num, item) => {\n    const teams = [...this.state.teams];\n    const queue = [...this.state.queue];\n    queue.push(teams[num].splice(teams[num].indexOf(item), 1)[0]);\n    this.setState({ teams, queue });\n  };\n\n  handleRemovePlayer = (player) => {\n    let queue = [...this.state.queue];\n    queue.splice(queue.indexOf(player), 1);\n    this.setState({ queue });\n  };\n\n  handleSplitGroup = (group) => {\n    let queue = [...this.state.queue];\n    let newItemID = this.state.nextItemID;\n    queue.splice(\n      queue.indexOf(group),\n      1,\n      ...group.item.players.map(\n        (p) => new QueueItem(newItemID++, \"player\", 1, p)\n      )\n    );\n    console.log(\"Updated queue post split: \", queue);\n    this.setState({ queue, newItemID });\n  };\n\n  handleRefillTeam = (num) => {\n    let team = [...this.state.teams[num]];\n    let queue = [...this.state.queue];\n\n    ({ team, queue } = this.draftTeam(team, queue));\n\n    const teams = [...this.state.teams];\n    teams[num] = team;\n\n    this.setState({ teams, queue });\n  };\n\n  handleChangeruleset = (ruleset) => {\n    this.setState({ ruleset });\n  };\n\n  getNextButtons = () => {\n    switch (this.state.ruleset) {\n      case \"playtwo\":\n        return (\n          <div className=\"container mb-2 text-center\">\n            <button\n              className=\"btn btn-primary col-5 mx-2\"\n              onClick={this.playTwoNext}\n            >\n              Next Game\n            </button>\n          </div>\n        );\n      case \"twooff\":\n        return (\n          <div className=\"container mb-2 text-center\">\n            <button\n              className=\"btn btn-primary col-5 mx-2\"\n              onClick={this.twoOffNext}\n            >\n              Next Game\n            </button>\n          </div>\n        );\n      case \"kings\":\n        return (\n          <div className=\"container mb-2 text-center\">\n            <button\n              className=\"btn btn-primary col-5 mx-2\"\n              onClick={() => this.kingsCourtNext(0)}\n            >\n              Team 1 Won\n            </button>\n            <button\n              className=\"btn btn-primary col-5 mx-2\"\n              onClick={() => this.kingsCourtNext(1)}\n            >\n              Team 2 Won\n            </button>\n          </div>\n        );\n\n      default:\n        break;\n    }\n  };\n\n  sizeOfItems(items) {\n    return items.length === 0\n      ? 0\n      : items.map((i) => i.size).reduce((sum, i) => sum + i);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <div className=\"container\">\n          <div className=\"row gx-2 mb-2\">\n            <div className=\"col-12 col-md-6\">\n              <div className=\"row\">\n                <TeamWindow\n                  num=\"1\"\n                  team={this.state.teams[0]}\n                  size={this.sizeOfItems(this.state.teams[0])}\n                  onRefillTeam={() => this.handleRefillTeam(0)}\n                  onRemoveFromTeam={() => this.handleRemoveFromTeam(0)}\n                />\n                <TeamWindow\n                  num=\"2\"\n                  team={this.state.teams[1]}\n                  size={this.sizeOfItems(this.state.teams[1])}\n                  onRefillTeam={() => this.handleRefillTeam(1)}\n                  onRemoveFromTeam={() => this.handleRemoveFromTeam(1)}\n                />\n              </div>\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <QueueWindow\n                queue={this.state.queue}\n                getNextButtons={this.getNextButtons}\n                onRemovePlayer={this.handleRemovePlayer}\n                onSplitGroup={this.handleSplitGroup}\n              />\n            </div>\n          </div>\n          <div className=\"row gx-2\">\n            {/* <div className=\"mb-2\"> */}\n            <AddPlayerWindow\n              onAddPlayer={this.handleAddPlayer}\n              onAddPlayerToGroup={this.handleAddPlayerToGroup}\n            />\n            {/* </div> */}\n            <RulesetWindow\n              ruleset={this.state.ruleset}\n              onChangeRuleset={this.handleChangeruleset}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QueueView;\n","import \"./App.css\";\nimport QueueView from \"./components/QueueView\";\n\nfunction App() {\n  return <QueueView />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}